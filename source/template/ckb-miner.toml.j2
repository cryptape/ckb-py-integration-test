# Config generated by `ckb init --chain dev`

data_dir = "{{ ckb_miner_data_dir | default(ckb_data_dir) }}"

[chain]
{# Choose the kind of chains to run, possible values: #}
{# - { file = "specs/dev.toml" }                      #}
{# - { bundled = "specs/testnet.toml" }               #}
{# - { bundled = "specs/mainnet.toml" }               #}
spec = {{ ckb_miner_chain_spec | default(ckb_chain_spec) }}

[logger]
filter = "{{ ckb_miner_logger_filter | default(ckb_logger_filter) }}"
color = {{ ckb_miner_logger_color | default(ckb_logger_color) }}
log_to_file = {{ ckb_miner_logger_log_to_file | default(ckb_logger_log_to_file) }}
log_to_stdout = {{ ckb_miner_logger_log_to_stdout | default(ckb_logger_log_to_stdout) }}

[sentry]
# set to blank to disable sentry error collection
dsn = "{{ ckb_miner_sentry_dsn | default(ckb_sentry_dsn) }}"
# if you are willing to help us to improve,
# please leave a way to contact you when we have troubles to reproduce the errors.
org_contact = "{{ ckb_miner_sentry_org_contact | default(ckb_sentry_org_contact) }}"

[miner.client]
rpc_url = "http://{{ ckb_miner_rpc_url | default(ckb_rpc_listen_address) }}"
block_on_submit = {{ ckb_miner_block_on_submit | default("true") }}

# block template polling interval in milliseconds
poll_interval = {{ ckb_miner_poll_interval | default("1_000_000_000_000") }}

{% if ckb_miner_workers is defined %}
    {% for worker in ckb_miner_workers %}
        [[miner.workers]]
        worker_type = "{{ worker.worker_type }}"
        delay_type  = "{{ worker.delay_type  }}"
        value       =  {{ worker.value       }}
    {% endfor %}
{% else %}
    [[miner.workers]]
    worker_type = "Dummy"
    delay_type = "Constant"
    value = 1000
{% endif %}
