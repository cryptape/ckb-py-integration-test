# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: fiber test
on:
  push:
    branches: ["fiber"]
  pull_request:
    branches: ["fiber"]

permissions:
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run make prepare
        run: make prepare

      - name: Tar backup
        run: |
          tar -czf prepare-backup.tar.gz \
            download \
            source/ckb-cli \
            source/ckb-cli-old

      - name: Backup data
        uses: actions/upload-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: prepare-backup.tar.gz

  fiber_test_open_channel:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO=test_cases/fiber/devnet/open_channel

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-open_channel-reports-${{ runner.os }}
          path: ./report

  fiber_test_accept_channel_cancel_invoice_connect_peer_disconnect_peer_backup:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/accept_channel test_cases/fiber/devnet/cancel_invoice test_cases/fiber/devnet/connect_peer test_cases/fiber/devnet/disconnect_peer test_cases/fiber/devnet/backup"

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-accept_channel_to_disconnect_peer-reports-${{ runner.os }}
          path: ./report

  fiber_test_get_invoice_graph_channels_graph_nodes_list_channels_new_invoice:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/get_invoice test_cases/fiber/devnet/graph_channels test_cases/fiber/devnet/graph_nodes test_cases/fiber/devnet/list_channels test_cases/fiber/devnet/new_invoice"

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-accept_channel_to_disconnect_peer-reports-${{ runner.os }}
          path: ./report

  fiber_test_send_payment_module_offline:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/send_payment/module test_cases/fiber/devnet/send_payment/offline"

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-send_payment-module-offline-reports-${{ runner.os }}
          path: ./report

  fiber_test_send_payment_params_path:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/send_payment/params test_cases/fiber/devnet/send_payment/path"

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-send_payment-params-path-reports-${{ runner.os }}
          path: ./report


  fiber_test_shutdown_channel_update_channel_issue:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/shutdown_channel test_cases/fiber/devnet/update_channel test_cases/fiber/devnet/issue"

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-send_payment-reports-${{ runner.os }}
          path: ./report


  fiber_test_watch_tower:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/watch_tower"
      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-watch_tower-reports-${{ runner.os }}
          path: ./report


  fiber_test_watch_tower_tlc:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/watch_tower_wit_tlc"
      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-watch_tower-reports-${{ runner.os }}
          path: ./report



  fiber_test_send_payment_debug_mixed:
    needs: prepare
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download prepare backup
        uses: actions/download-artifact@v4
        with:
          name: prepare-backup-${{ runner.os }}
          path: ./

      - name: Extract tarball and restore permissions
        run: |
          tar -xzf prepare-backup.tar.gz

      - name: Run fiber_test_demo
        run: make fiber_test_demo FIBER_TEST_DEMO="test_cases/fiber/devnet/send_payment/debug test_cases/fiber/devnet/send_payment/mixed"

      - name: Publish reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jfoa-fiber_test_send_payment_debug_mixed-reports-${{ runner.os }}
          path: ./report
