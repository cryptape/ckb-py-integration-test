import pytest

from framework.basic_fiber import FiberTest


class TestCurrency(FiberTest):
    """
    - Fibb,
    - Fibt,
    - Fibd,
    - 其他
    """

    # FiberTest.debug = True

    def test_fibb_fibt_fibd(self):
        with pytest.raises(Exception) as exc_info:
            self.fiber1.get_client().new_invoice(
                {
                    "amount": hex(1),
                    "currency": "Fibb",
                    "description": "test invoice generated by node2",
                    "expiry": "0xe10",
                    "final_cltv": "0x28",
                    "payment_preimage": self.generate_random_preimage(),
                    "hash_algorithm": "sha256",
                }
            )
        expected_error_message = "Currency must be Fibd with the chain network"
        assert expected_error_message in exc_info.value.args[0], (
            f"Expected substring '{expected_error_message}' "
            f"not found in actual string '{exc_info.value.args[0]}'"
        )

        with pytest.raises(Exception) as exc_info:
            self.fiber1.get_client().new_invoice(
                {
                    "amount": hex(1),
                    "currency": "Fibt",
                    "description": "test invoice generated by node2",
                    "expiry": "0xe10",
                    "final_cltv": "0x28",
                    "payment_preimage": self.generate_random_preimage(),
                    "hash_algorithm": "sha256",
                }
            )
        expected_error_message = "Currency must be Fibd with the chain network"
        assert expected_error_message in exc_info.value.args[0], (
            f"Expected substring '{expected_error_message}' "
            f"not found in actual string '{exc_info.value.args[0]}'"
        )

        invoice = self.fiber1.get_client().new_invoice(
            {
                "amount": hex(1),
                "currency": "Fibd",
                "description": "test invoice generated by node2",
                "expiry": "0xe10",
                "final_cltv": "0x28",
                "payment_preimage": self.generate_random_preimage(),
                "hash_algorithm": "sha256",
            }
        )
        assert invoice["invoice"]["currency"] == "Fibd"
