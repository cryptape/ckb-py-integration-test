from framework.basic_fiber import FiberTest


class FindPath(FiberTest):
    # FiberTest.debug = True
    # todo
    def test_01(self):
        for i in range(1):
            fiber = self.start_new_fiber(self.generate_account(10000))
            fiber.connect_peer(self.fiber1)
            fiber.connect_peer(self.fiber2)

        for i in range(2):
            self.open_channel(
                self.fibers[0], self.fibers[1], 100 * 100000000, 100 * 100000000
            )
        self.open_channel(
            self.fibers[0], self.fibers[1], 100 * 100000000, 100 * 100000000
        )
        for i in range(2):
            self.open_channel(
                self.fibers[0], self.fibers[1], 1000 * 100000000, 100 * 100000000
            )
        for i in range(2):
            self.open_channel(
                self.fibers[1], self.fibers[2], 100 * 100000000, 100 * 100000000
            )
        self.open_channel(
            self.fibers[1], self.fibers[2], 1000 * 100000000, 1000 * 100000000
        )
        for i in range(2):
            self.open_channel(
                self.fibers[1], self.fibers[2], 100 * 100000000, 100 * 100000000
            )

        self.send_payment(self.fibers[0], self.fibers[2], 300 * 10000000)

    def send_payment(self, src_fiber, to_fiber, amount, key_send=False):
        if not key_send:
            invoice_address = to_fiber.get_client().new_invoice(
                {
                    "amount": hex(amount),
                    "currency": "Fibd",
                    "description": "test invoice generated by node2",
                    "expiry": "0xe10",
                    "final_cltv": "0x28",
                    "payment_preimage": self.generate_random_preimage(),
                    "hash_algorithm": "sha256",
                }
            )["invoice_address"]
            payment = src_fiber.get_client().send_payment(
                {
                    "invoice": invoice_address,
                    "dry_run": True,
                }
            )
            payment = src_fiber.get_client().send_payment(
                {
                    "invoice": invoice_address,
                }
            )
            self.wait_payment_state(src_fiber, payment["payment_hash"], "Success")
            self.wait_invoice_state(to_fiber, payment["payment_hash"], "Paid")
            return payment["payment_hash"]
        payment = src_fiber.get_client().send_payment(
            {
                "amount": hex(amount),
                "target_pubkey": to_fiber.get_client().node_info()["public_key"],
                "keysend": True,
            }
        )
        self.wait_payment_state(src_fiber, payment["payment_hash"], "Success")
        return payment["payment_hash"]
